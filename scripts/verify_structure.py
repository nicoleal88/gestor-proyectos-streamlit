#!/usr/bin/env python3
"""
Script de prueba para verificar la estructura de navegaci√≥n de la aplicaci√≥n.
Este script simula la ejecuci√≥n de la aplicaci√≥n para verificar que la estructura
de navegaci√≥n est√© funcionando correctamente.
"""

import sys
import os

# Add the parent directory to the path
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

def test_navigation_structure():
    """Test que verifica la estructura de navegaci√≥n."""

    print("üß™ Verificando estructura de navegaci√≥n...")

    # Verificar que el archivo principal existe
    app_file = os.path.join(os.path.dirname(__file__), 'app.py')
    if not os.path.exists(app_file):
        print("‚ùå Error: app.py no encontrado")
        return False

    # Verificar que el directorio de p√°ginas existe
    pages_dir = os.path.join(os.path.dirname(__file__), 'pages')
    if not os.path.exists(pages_dir):
        print("‚ùå Error: directorio pages/ no encontrado")
        return False

    # Verificar que hay archivos de p√°gina
    page_files = [f for f in os.listdir(pages_dir) if f.endswith('.py')]
    if not page_files:
        print("‚ùå Error: no se encontraron archivos de p√°gina")
        return False

    print(f"‚úÖ Estructura b√°sica verificada:")
    print(f"   - app.py: {os.path.exists(app_file)}")
    print(f"   - pages/: {len(page_files)} archivos de p√°gina encontrados")

    # Verificar que las p√°ginas tienen la estructura correcta
    for page_file in page_files:
        page_path = os.path.join(pages_dir, page_file)
        with open(page_path, 'r') as f:
            content = f.read()

        if 'def page():' not in content:
            print(f"‚ö†Ô∏è  Advertencia: {page_file} no tiene funci√≥n page()")
        else:
            print(f"‚úÖ {page_file}: estructura correcta")

    return True

def test_app_structure():
    """Test que verifica la estructura del c√≥digo en app.py."""

    print("\nüîç Verificando estructura de app.py...")

    app_file = os.path.join(os.path.dirname(__file__), 'app.py')
    with open(app_file, 'r') as f:
        content = f.read()

    # Verificar que la estructura de navegaci√≥n est√© correcta
    if 'with st.sidebar:' in content and 'selected_page.run()' in content:
        if content.find('with st.sidebar:') < content.find('selected_page.run()'):
            print("‚úÖ Estructura de navegaci√≥n correcta:")
            print("   - Sidebar contiene informaci√≥n de usuario y navegaci√≥n")
            print("   - √Årea principal ejecuta el contenido de la p√°gina")
        else:
            print("‚ùå Error: Estructura de navegaci√≥n incorrecta")
            return False
    else:
        print("‚ö†Ô∏è  Estructura de navegaci√≥n no encontrada o incompleta")
        return False

    return True

def main():
    """Funci√≥n principal de test."""
    print("üöÄ Iniciando verificaci√≥n de la aplicaci√≥n...\n")

    success = True

    # Test 1: Estructura b√°sica
    if not test_navigation_structure():
        success = False

    # Test 2: Estructura de app.py
    if not test_app_structure():
        success = False

    print(f"\n{'='*50}")

    if success:
        print("‚úÖ Verificaci√≥n completada exitosamente!")
        print("üìù La estructura de la aplicaci√≥n parece estar correcta.")
        print("üí° Si a√∫n ves problemas en el sidebar, verifica:")
        print("   1. Que las credenciales de Google est√©n configuradas")
        print("   2. Que el Google Sheet 'GestorProyectosStreamlit' exista")
        print("   3. Que las pesta√±as requeridas est√©n en el Google Sheet")
        print("   4. Que los permisos de la cuenta de servicio est√©n correctos")
    else:
        print("‚ùå Se encontraron problemas en la verificaci√≥n")
        print("üîß Revisa los errores mostrados arriba")

    return success

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
